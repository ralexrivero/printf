." Manpage for _printf
." be in contact for bugs
."

.TH _printf 3 "June 2021" "Programmer's Manual"
version 1.0 release date: 24/07/21


.SH NAME
.B _printf
- Prints formatted output to stdout.

.SH SYNOPSIS

.RB #include <main.h>

.RB int _printf(const char *restrict format, ...);

.SH DESCRIPTION

The funtions in the _printf() function produce output according to a format.
Write output to the standard output (stdout) stream and returns the number
of characters printed.
All of these functions write the output under the control of a
format string that specifies how subsequent arguments (or
arguments accessed via the variable-length argument facilities
are converted for output.

.B Format of the format string:
The format string is a character string, is composed
of zero or more directives: ordinary characters (not %), which
are copied unchanged to the output stream; and conversion
specifications, each of which results in fetching zero or more
subsequent arguments.  Each conversion specification is
introduced by the character %, and ends with a conversion
specifier.

The overall syntax of a conversion specification is:

%[$][flags][width][.precision][length modifier]conversion


The arguments must correspond properly (after type promotion) with the conversion specifier.

_printf("%d", 1);

.SH CONVERSION SPECIFIERS
.B %c - prints a single char
.B %s - prints the argument as a string
.B %% - prints a single perecentage sign to the stream
.B %i / %d - prints signed decimal integer
.B %R - prints the rot13'ed string
.B %r - prints the reversed string

.SH RETURN VALUE

.B Upon successful return, these functions return the number of characters printed (excluding the null byte used to end output to strings).

.SH EXAMPLES
.PP
#include "main.h"
.PP
_printf("chararacter: %c", 'R');
.PP
Output: character: R
.PP
_printf("string: %s", "Hi Betty !");
.PP
Output: string: Hi Betty !
.PP
_printf("integer: %i", 80);
.PP
Output: integer: 80
.PP
_printf("integrer %i", 14);
.PP
Output: integrer 14
.PP
_printf("decimal: %d", 100);
.PP
Output: decimal: 100
.PP
_printf("octal %o", 92);
.PP
Output: octal 134
.PP
_printf("Percent:[%%]");
.PP
Output: Percent:[%]
.PP
.B Return value
.sp
On success, _printf returns the number of printed characters. If
.I format
is NULL or error, it returns -1.
.sp
No known bugs.
.SH AUTHORS
Diego G, Ronald R, Joaquin P
.SH COPYRIGHT
    Diego G, Ronald R, Joaquin P
